@page "/ReviewExamEvents"
@using SEP3.PaperlessExam.Data.PaperlessExamSevice.ExamEvent
@using SEP3.PaperlessExam.Model
@using SEP3.PaperlessExam.Model.ExamEvent
@using SEP3.PaperlessExam.Authentication
@inject  IExamService ExamService;
@inject AuthenticationStateProvider AuthenticationStateProvider

<link rel="stylesheet" type="text/css" href="css/View/view.css">
<h3>Review Exam Events</h3>
@if (_examinationEventsList != null)
{
    <table class="table">
        <thead>
        <tr>
            <th>Exam Title</th>
            <th>Exam Date and Time</th>
        </tr>
        </thead>
        <tbody>

        @foreach (var exam in _examinationEventsList)
        {
            <tr>
                <td>@exam.ExamTitle</td>
                <td>@exam.ExamDateAndTime</td>
            </tr>
        }
        </tbody>
    </table>
}
else
     {
     <div style="color:red">@_errorMessage</div>
     }
@code {
    private string _errorMessage;
    private User _currentUser;
    IList<ExaminationEvent> _examinationEventsList;
    protected override async Task OnInitializedAsync()
    {
    // UserService.LoginUser(new User());
        _currentUser = ((CustomAuthenticationStateProvider) AuthenticationStateProvider).GetCachedUser();
        try
        {
            _examinationEventsList = await ExamService.GetTeachersExamEvents(_currentUser.Id);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _errorMessage = e.Message;
        }
       
    }
}