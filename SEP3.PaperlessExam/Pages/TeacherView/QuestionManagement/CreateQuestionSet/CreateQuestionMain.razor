@page "/ghfjghj"
@page "/createQuestion"
@using Radzen


<div class="jumbotron text-center">
    <h1>Create Question</h1>
</div>
<RadzenContent Container="main">
    <ChildContent>
        <RadzenSteps NextText="Next" Change=@((args) => StepChange(args))>
            <Steps>
                @* First step *@
                <RadzenStepsItem Disabled="false" Selected="false" Text="Question type">
                    <ChildContent>
                        <RadzenLabel Text="Choose question type:">
                        </RadzenLabel>

                        <RadzenRadioButtonList @bind-Value=@nullableValue TValue="int?" Orientation="Orientation.Vertical" Change=@((args) => SetQuestionType(args))>
                            <Items>
                                <RadzenRadioButtonListItem Text="Written" Value="1" TValue="int?"/>
                                <RadzenRadioButtonListItem Text="Multiple-choice" Value="2" TValue="int?"/>

                            </Items>
                        </RadzenRadioButtonList>
                    </ChildContent>
                </RadzenStepsItem>
                @* Second step *@
                <RadzenStepsItem Text="Setup">
                    <RadzenLabel Text="Title"/>
                    <RadzenTextBox style="margin-bottom: 5px; margin-left: 16px" Change=@(args => SetTitle(args))>
                    </RadzenTextBox>
                    <div style="color:red">@_errorMessage</div>
                    <RadzenLabel Text="Topic"/>
                    <RadzenTextBox style="margin-left: 10px" Change=@(args => SetTopic(args))>
                    </RadzenTextBox>
                    <div style="color:red">@_errorMessage</div>
                </RadzenStepsItem>
                <RadzenStepsItem Text="Create question">
                    @* Third step *@
                    @if (_displayWrittenQuestionBuilder)
                    {
                        <RadzenLabel Text="Written Question Builder"/>
                    }
                    @if (_displayMultipleChoiceQuestionBuilder)
                    {
                        <RadzenLabel Text="Multiple-choice Question Builder"/>
                        <MultipleChoiceQuestions></MultipleChoiceQuestions>
                    }
                </RadzenStepsItem>
            </Steps>
        </RadzenSteps>
    </ChildContent>
</RadzenContent>

@code {
    // Question type: Written or Multiple-choice
    private string _questionType;

    private string _errorMessage;

    private bool _displayMultipleChoiceQuestionBuilder;
    private bool _displayWrittenQuestionBuilder;

    // Used in first step as value for the radio buttons
     int? nullableValue = null;

    void SetQuestionType(int? value)
    {
        _displayWrittenQuestionBuilder = false;
        _displayMultipleChoiceQuestionBuilder = false;
        switch (value)

        {
            case 1:
                _questionType = "Written";
                _displayWrittenQuestionBuilder = true;
                break;
            case 2:
                _questionType = "Multiple-choice";
                _displayMultipleChoiceQuestionBuilder = true;
                break;
        }
    }


    private void SetTopic(string value)
    {
        Console.WriteLine(value);
    }

    private void SetTitle(string value)
    {
        throw new NotImplementedException();
    }

  

    internal async Task StepChange(int args)
    {
        Console.WriteLine(args);
        switch (args)
        {
            case 2:
                if (_questionType == "Written")
                {
                    Console.WriteLine(_questionType);
                }
                else if (_questionType == "Multiple-choice")
                {
                    Console.WriteLine(_questionType);
                }
                break;
        }
    }




}