@page "/UpdateUser"
@using SEP3.PaperlessExam.Data.PaperlessExamSevice
@using SEP3.PaperlessExam.Model
@inject IPaperlessExamService PaperlessExamService
@inject NavigationManager NavigationManager
<h3>CreateAccount</h3>

<EditForm Model="@_updatedUser" OnValidSubmit="@EditUser">
    <div class="container" id="tableStyle">
        <div class=" text-center mt-1 ">
            <h1>Create Account</h1>
            <DataAnnotationsValidator/>
            <ValidationSummary/>
        </div>
        <div class="row ">
            <div class="col-lg-7 mx-auto">
                <div class="card mt-2 mx-auto p-4 bg-light">
                    <div class="card-body bg-light">
                        <div class="container">

                            <div class="controls">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="form_name">First Name *</label>
                                            <InputTextArea rows="1" id="form_name" @bind-Value="_updatedUser.FirstName" type="text" name="name" class="form-control" required="required" data-error="Firstname is required." placeholder="@_selectedUser.FirstName"></InputTextArea>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="form_name">Last Name *</label>
                                            <InputTextArea rows="1" id="form_name" @bind-Value="_updatedUser.LastName" type="text" name="name" class="form-control" required="required" data-error="Lastname is required." placeholder="@_selectedUser.LastName"></InputTextArea>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="form_name">Username *</label>
                                            <InputTextArea rows="1" id="form_name" @bind-Value="_updatedUser.Username" type="text" name="name" class="form-control"required="required" data-error="Username is required." placeholder="@_selectedUser.Username"></InputTextArea>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="form_need"> Password *</label>
                                            <InputTextArea rows="1" id="form_name" @bind-Value="_updatedUser.Password" type="text" name="name" class="form-control" required="required" data-error="Password is required." placeholder="@_selectedUser.Password"></InputTextArea>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                                                            <div class="form-group">
                                                                                <label for="form_need"> Confirm Password *</label>
                                                                                <InputTextArea rows="1" id="form_name" @bind-Value="_updatedUser.ConfirmPassword" type="text" name="name" class="form-control" required="required" data-error="Confirm Password is required." placeholder="@_selectedUser.ConfirmPassword"></InputTextArea>
                                                                            </div>
                                                                        </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="form_need"> Role *</label>
                                            <select id="form_need" @bind="@roleName" name="need" class="form-control" required="required" data-error="Please specify role." placeholder="@_selectedUser.Role">
                                                <option value="" selected disabled>Select Role</option>
                                                <option>Teacher</option>
                                                <option>Student</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="form_email">Email *</label>
                                            <InputTextArea id="form_text" rows="1" @bind-Value="_updatedUser.Email" type="text" name="email" class="form-control" required="required" data-error="Valid email is required." placeholder="@_selectedUser.Email"></InputTextArea>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <input type="submit" class="btn btn-success btn-send pt-2 btn-block " value="Send Message">
                                    </div>
                                </div>

                            </div>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private User _selectedUser = new User();
    private User _updatedUser = new User();
    private string roleName;

    private void EditUser()
    {
        Role userRole=new Role(roleName);
        _updatedUser.Role = userRole;
        PaperlessExamService.CreateUserAsync(_updatedUser);
        Console.WriteLine(_updatedUser.ToString());
        NavigationManager.NavigateTo("/");
    }

}